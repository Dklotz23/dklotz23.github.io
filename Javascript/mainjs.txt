
var hours = 24; // to clear the localStorage after 24 hour

var now = new Date().getTime();
var setupTime = localStorage.getItem('setupTime');
    if (setupTime == null) {
    localStorage.setItem('setupTime', now)
    } else {
        if(now-setupTime > hours*60*60*1000) {
        localStorage.clear()
        localStorage.setItem('setupTime', now);
        }
    }   

let word_four_list = ['coat','fish','good','read','mean','next','work','road','toad','head','jeep','moon','food','near','star','land','mine','ship','rate','zero','gate','edge','mark','even','free','itch','form','tone','tune','loaf','wave','ache','sign','brew','comb','glue','vest']
let word_five_list = ['point','great','broke','front','quick','speed','money','chase','write','cheap','green','twist','chant','serve','yacht','noise','wedge','prize','trend','trail','pause','eject','twine','knock','quake','awake','rouge','blend','glare','vault','swirl','broil','knead','whisk','sweep','click','slump','pivot','visit','reset','brisk','panel','smart','radio']

let gameplay = true;
let lastturn = false;

let guessed_words = [];

function getRandom(word_list) {
    let rand_num = Math.floor(Math.random() * word_list.length)
    return rand_num;
}

let word_four = ''
let word_five = ''
// let word_four = word_four_list[getRandom(word_four_list)];
// let word_five = word_five_list[getRandom(word_five_list)];

// let combined_words = word_four + word_five;

function displayBoard () {
    if (localStorage.getItem('init_board') == null) {
        word_four = word_four_list[getRandom(word_four_list)];
        word_five = word_five_list[getRandom(word_five_list)];
        let combined_words = word_four + word_five;
        localStorage.setItem('word_four',JSON.stringify(word_four));
        localStorage.setItem('word_five',JSON.stringify(word_five));
        gb = createBoard(combined_words);
        localStorage.setItem('init_board',JSON.stringify(gb));
        localStorage.setItem('game_board',JSON.stringify(gb));
        localStorage.setItem('guessed_word_cnt', 0);
    } else {
        word_four = JSON.parse(localStorage.getItem('word_four'));
        word_five = JSON.parse(localStorage.getItem('word_five'));
        localStorage.setItem('guessed_word_cnt',JSON.parse(localStorage.getItem('guessed_word_cnt')))    
        let gb = JSON.parse(localStorage.getItem('game_board'));
        for (let i = 0; i < gb.length; i++) {
            document.getElementById(i).innerHTML = gb[i];
        }
    return gb
    }
return gb
} 
    
// displaying current game board from local storage
game_board = displayBoard();

//display current words guessed from local storage.
guessed_words = displayGuesses();



function gameWinCheck(game_board,lastturn,word) {
    bk_cnt = 0
    for (let i = 0; i < game_board.length; i++) {
        if (game_board[i] == '') {
            bk_cnt += 1;
        }
    }

    if (lastturn == false) {
        if (bk_cnt == 9) {
            const congrats_msg = `Congratulations, ${word} was the second word. You have won the game!`;
            document.getElementById("message").innerHTML = congrats_msg;
            gameplay = false;
        } else if (word == word_four | word == word_five) {
            const one_wrd_msg = `Congratulations, ${word} was one of the words! There is still one word to guess.`;
            document.getElementById("message").innerHTML = one_wrd_msg;
            //if (guessed_words.length == 5) { lastturn = true};
        } else {
            const lost_msg = `Sorry, ${word} was not one of the correct words. Try again.`;
            document.getElementById("message").innerHTML = lost_msg};
            //if (guessed_words.length == 5) { lastturn = true};
    } else if (lastturn == true) {
        if (bk_cnt == 9) {
            const congrats_msg = `Congratulations, ${word} was the second word. You have won the game!`;
            document.getElementById("message").innerHTML = congrats_msg;
            gameplay = false;
        } else if (word == word_four | word == word_five) {
            const one_wrd_msg = `${word} was one of the words but you are out of guesses... Better luck next time`;
            document.getElementById("message").innerHTML = one_wrd_msg;
            gameplay = false;
        } else {
            const lost_msg = 'Sorry, You are all out of guesses. Better luck next time.';
            document.getElementById("message").innerHTML = lost_msg};
            gameplay = false;
    }
}

function scrambleWords(words) {
    var arr = words.split('');
    arr.sort(function() {
        return 0.5 - Math.random();
    });
    words = arr.join('');
    return words
}

function createBoard(combined_words) {
    let game_board = [];
    let board = [' ',' ',' ',' ',' ',' ',' ',' ',' '];
    scramble = scrambleWords(combined_words);
    for (let i = 0; i < scramble.length; i++) {
        board[i] = scramble[i];
        document.getElementById(i).innerHTML = board[i];
        game_board.push(board[i])
    }
    return game_board;
}

function addLetter(letter) {
    let prev_letts = ''
    let letts = ''
    prev_letts = document.getElementById("answer_input").getAttribute('value');
    if (prev_letts != null) {
        letts = document.getElementById("answer_input").setAttribute('value', prev_letts + letter);
    }
    else {
        document.getElementById("answer_input").setAttribute('value',letter);
    }
    return letts
 }

function delLetter() {
    prev_letts = document.getElementById("answer_input").getAttribute('value');
    if (prev_letts != null) {
        del_lett = prev_letts.slice(0,prev_letts.length-1)
        document.getElementById("answer_input").setAttribute('value',del_lett)
    }

}

function displayGuesses(){
    if (localStorage.getItem('guessed_words') != null) {
        document.getElementById("guesses").innerHTML = JSON.parse(localStorage.getItem('guessed_words'))
        return JSON.parse(localStorage.getItem('guessed_words'))
    } else { return []}
 }

//removes correct letters from the board when correct word is guessed.
function updateBoard(word,game_board) {
    let word_split = word.split('')
    let board = game_board
    for (let i = 0; i <= board.length -1; i++) {
        for (let j = 0; j <= word_split.length -1; j++) {
            if (board[i] == word_split[j]) {
                board[i] = ''
                word_split[j] = ''
            }
        }
    }
    return board 
}


//game logic
function checkWord(word){
    if (JSON.parse(localStorage.getItem('guessed_word_cnt')) < 5) {
        if (word != '') {
            guessed_words.push(word);
            localStorage.setItem('guessed_words',JSON.stringify(guessed_words));
            localStorage.setItem('guessed_word_cnt',JSON.parse(localStorage.getItem('guessed_word_cnt'))+1)
            displayGuesses();
            if (guessed_words.length >= 5) { lastturn = true};
            if (word == word_four | word == word_five) {
                //document.getElementById("message").innerHTML = `Congratulations, ${word} was one of the words!`;
                board = updateBoard(word,game_board);
                localStorage.setItem('game_board', JSON.stringify(board));
                for (let i = 0; i < board.length; i++) {
                    document.getElementById(i).innerHTML = board[i];
                }            
                gameWinCheck(game_board,lastturn,word);
            } else {
                gameWinCheck(game_board,lastturn,word);
            }
        } else {document.getElementById("message").innerHTML = "No word Entered. Try again.";}
    } else {document.getElementById("message").innerHTML = 'Sorry, You have already run out of guesses for today.'}
}


function submitWord() {
    if (gameplay == true) {
        word = document.getElementById("answer_input").getAttribute('value');
        clr = document.getElementById("answer_input").setAttribute('value','');
        checkWord(word);
    } else { document.getElementById("answer_input").setAttribute('value','') }
 }


 //keyboard clicks
const keys = document.querySelectorAll('.keyboard-row button');
for (let i = 0; i < keys.length; i++) {
    keys[i].onclick = ({ target }) => {
        const key = target.getAttribute("data-key")
        console.log(key);
        addLetter(key);
    }
}

//submit button clear after submission
document.getElementById("del").addEventListener("click",delLetter);

document.getElementById("enter").addEventListener("click",submitWord);
